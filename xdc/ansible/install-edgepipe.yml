- name: Install EdgePipe
  hosts: all

  vars:
    # ansible_python_interpreter: /usr/bin/python3
    source_dir: "{{ ansible_env.HOME }}/EdgePipe"
    version: fogsys_integration
    venv_dir: "{{ ansible_env.HOME }}/venv-EdgePipe"

  tasks:

  - name: Install apt dependencies
    become: yes
    apt:
      name:
        - build-essential
        - cmake
        - git
        - libyaml-cpp-dev
        # - python3-pip
        # - python3-setuptools
        - python3-venv

  - name: Fetch source
    ansible.builtin.git:
      accept_hostkey: yes
      repo: 'git@github.com:cimes-isi/EdgePipe.git'
      dest: "{{ source_dir }}"
      version: "{{ version }}"
    register: source

  # TODO: too many problems with pip module...
  # - name: Create Python virtualenv
  #   ansible.builtin.pip:
  #     # need latest for dependencies to correctly compile
  #     state: latest
  #     # this must be a full path, o/w it creates in /tmp and we get other seemingly unrelated python errors
  #     # keep outside of the EdgePipe directory so we can manage them independently, if needed
  #     virtualenv: "{{ ansible_env.HOME }}/venv-EdgePipe"
  #     # virtualenv_python: "{{ ansible_python_interpreter }}"
  #     virtualenv_command: "{{ ansible_python_interpreter }} -m venv"
  #     requirements: "{{ ansible_env.HOME }}/{{ source_dir }}/requirements.txt"

  - name: Create Python virtualenv
    command: python3 -m venv "{{ venv_dir }}"
    args:
      creates: "{{ venv_dir }}"
    register: virtualenv

  - name: Update Python virtualenv
    when: source.changed or virtualenv.changed
    # --no-cache-dir needed due to memory constraints on MinnowBoards
    shell: |
      source "{{ venv_dir }}/bin/activate" && \
      pip install -U pip && \
      pip uninstall -y edgepipe && \
      pip install -e "{{ source_dir }}" -v --no-cache-dir
    args:
      executable: /bin/bash
